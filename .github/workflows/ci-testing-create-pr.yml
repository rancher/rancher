name: Create CI Testing PR
on:
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch for the PR (leave empty for default branch)'
        required: false
        default: ''
      max_ci_attempts:
        description: 'Maximum number of CI attempts per workflow'
        required: false
        default: 20
        type: number
      include_patterns:
        description: 'Patterns to include in failure detection (URL encode special chars: %2C for comma, %27 for single quote)'
        required: false
        default: 'FAIL,Fail,failed,ERROR:,Error:,error:,##[error],Error Trace:'
      exclude_patterns:
        description: 'Patterns to exclude from failure detection (URL encode special chars: %2C for comma, %27 for single quote)'
        required: false
        default: 'Failed to save: Unable to reserve cache with key docker.io,Failed to restore: "/usr/bin/tar" failed with error: The process,echo "Error: Failed to load image from tarball!",H4sIAAAAAAAA'

permissions:
  contents: write
  pull-requests: write
  id-token: write # Vault access

jobs:
  create-test-pr:
    runs-on: ubuntu-latest
    steps:
      - name: "Read some Secrets"
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/github/pr-actions-write-app/credentials appId | APP_ID;
            secret/data/github/repo/${{ github.repository }}/github/pr-actions-write-app/credentials privateKey | PRIVATE_KEY

      - name: "Create temporary token"
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2
        id: app-token
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.PRIVATE_KEY }}
          permission-pull-requests: write

      - name: Clear sensitive variables
        run: |
          echo "PRIVATE_KEY=" >> $GITHUB_ENV
          echo "APP_ID=" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup and create branch
        id: branch-setup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -n "${{ inputs.base_branch }}" ]]; then
            BASE_BRANCH="${{ inputs.base_branch }}"
          else
            BASE_BRANCH=$(gh repo view --json defaultBranchRef --jq '.defaultBranchRef.name')
          fi

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin "$BASE_BRANCH"
          git checkout "$BASE_BRANCH"

          BRANCH_NAME="ci_testing_$(date +'%Y%m%d_%H%M%S')"
          git checkout -b "$BRANCH_NAME"

          echo "base_branch=$BASE_BRANCH" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Create and push empty commit
        run: |
          git commit --allow-empty -m "Empty commit"
          git push origin ${{ steps.branch-setup.outputs.branch }}

      - name: Create draft PR
        env:
          # Needs write permissions to Pull requests (CI does not trigger on prs created by GITHUB_TOKEN)
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          INCLUDE_PATTERNS: ${{ inputs.include_patterns }}
          EXCLUDE_PATTERNS: ${{ inputs.exclude_patterns }}
          MAX_ATTEMPTS: ${{ inputs.max_ci_attempts }}
        run: |
          echo "This PR is for CI testing purposes only and can be ignored." > pr_body.txt
          echo "" >> pr_body.txt
          echo "MAX_CI_ATTEMPTS: \`$MAX_ATTEMPTS\`" >> pr_body.txt

          if [[ -n "$INCLUDE_PATTERNS" ]]; then
            echo "INCLUDE_PATTERNS: \`$INCLUDE_PATTERNS\`" >> pr_body.txt
          fi

          if [[ -n "$EXCLUDE_PATTERNS" ]]; then
            echo "EXCLUDE_PATTERNS: \`$EXCLUDE_PATTERNS\`" >> pr_body.txt
          fi

          gh pr create \
            --base "${{ steps.branch-setup.outputs.base_branch }}" \
            --head "${{ steps.branch-setup.outputs.branch }}" \
            --title "CI Testing" \
            --body-file pr_body.txt \
            --draft