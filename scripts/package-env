#!/usr/bin/env bash

current_dir=$(pwd)
cd $(git rev-parse --show-toplevel) || exit

source scripts/version

check_missing() {
  var=$1
  if [ -z "${!var}" ]; then
    >&2 echo "missing var $var"
    exit 1
  fi
}

REGISTRY=${REGISTRY/:-""/}
IMAGE=${REGISTRY}${REPO}/rancher:${TAG}
AGENT_IMAGE=${REPO}/rancher-agent:${AGENT_TAG}

export CATTLE_RANCHER_WEBHOOK_VERSION="108.0.0+up0.9.0-rc.7"
export CATTLE_REMOTEDIALER_PROXY_VERSION="106.0.1+up0.5.0"
export CATTLE_RANCHER_PROVISIONING_CAPI_VERSION="107.0.0+up0.8.0"
export CATTLE_RANCHER_TURTLES_VERSION="108.0.0+up0.25.0-rc.1"
export CATTLE_CSP_ADAPTER_MIN_VERSION="107.0.0+up7.0.0-rc.1"
export CATTLE_DEFAULT_SHELL_VERSION="rancher/shell:v0.5.0"
export CATTLE_FLEET_VERSION="108.0.0+up0.14.0-alpha.2"
export CATTLE_DEFAULT_SCC_OPERATOR_IMAGE="rancher/scc-operator:head"

export CATTLE_HELM_VERSION=$(grep -m1 'ENV CATTLE_HELM_VERSION=' package/Dockerfile | cut -d '=' -f2)
export CHART_DEFAULT_BRANCH=$(grep -m1 'ARG CHART_DEFAULT_BRANCH=' package/Dockerfile | cut -d '=' -f2)
export CATTLE_KDM_BRANCH=$(grep -m1 'ARG CATTLE_KDM_BRANCH=' package/Dockerfile | cut -d '=' -f2)
export CATTLE_K3S_VERSION=$(grep -m1 'ENV CATTLE_K3S_VERSION=' package/Dockerfile | cut -d '=' -f2)
export HELM_VERSION=$(grep -m1 'ENV HELM_VERSION=' package/Dockerfile.installer | cut -d '=' -f2)
export GO_VERSION=$(grep -m1 'golang:' package/Dockerfile | cut -d ':' -f2 | cut -d ' ' -f1)
export HELM_UNITTEST_VERSION=$(grep -m1 'ENV HELM_UNITTEST_VERSION=' Dockerfile.dapper | cut -d '=' -f2)

export TAG=${TAG}
export ARCH=${ARCH}
export REPO=${REPO}

check_missing "CATTLE_HELM_VERSION"
check_missing "CATTLE_KDM_BRANCH"
check_missing "CHART_DEFAULT_BRANCH"
check_missing "CATTLE_K3S_VERSION"
check_missing "HELM_VERSION"
check_missing "GO_VERSION"
check_missing "HELM_UNITTEST_VERSION"
check_missing "ARCH"
check_missing "TAG"
check_missing "REPO"

cd "$current_dir" || exit
