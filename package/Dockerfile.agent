ARG RANCHER_TAG=dev
ARG RANCHER_REPO=rancher
ARG REGISTRY=stgregistry.suse.com
ARG RANCHER_IMAGE=${REGISTRY}/${RANCHER_REPO}/rancher:${RANCHER_TAG}
ARG VERSION=dev

FROM --platform=$BUILDPLATFORM registry.suse.com/bci/golang:1.20 AS build
ARG VERSION=${VERSION}
ARG CGO_ENABLED=0
ARG TAGS="k8s"
ARG LINKFLAGS="-extldflags -static"
ARG LDFLAGS="-X main.VERSION=${VERSION} $LINKFLAGS"
ARG TARGETOS
ARG TARGETARCH

WORKDIR /app

COPY . .

RUN go mod download

RUN GOOS=$TARGETOS GOARCH=$TARGETARCH go build -tags "${TAGS}" -ldflags "${LDFLAGS}" -o agent ./cmd/agent


FROM ${RANCHER_IMAGE} AS rancher

FROM registry.suse.com/bci/bci-base:15.5
ARG ARCH=amd64

ENV KUBECTL_VERSION v1.25.12
RUN zypper -n install --no-recommends curl ca-certificates jq git-core hostname iproute2 vim-small less \
    bash-completion bind-utils acl openssh-clients tar gzip xz gawk sysstat && \
    zypper -n clean -a && rm -rf /tmp/* /var/tmp/* /usr/share/doc/packages/* && \
    curl -sLf https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${ARCH}/kubectl > /usr/bin/kubectl && \
    chmod +x /usr/bin/kubectl

ENV LOGLEVEL_VERSION v0.1.6

RUN curl -sLf https://github.com/rancher/loglevel/releases/download/${LOGLEVEL_VERSION}/loglevel-${ARCH}-${LOGLEVEL_VERSION}.tar.gz | tar xvzf - -C /usr/bin

ARG VERSION=${VERSION}
LABEL io.cattle.agent true
ENV AGENT_IMAGE rancher/rancher-agent:${VERSION}
ENV CATTLE_RANCHER_WEBHOOK_MIN_VERSION=''
# For now, this value needs to be manually synced with the one in the main Dockerfile. This pins downstream webhook's version.
ENV CATTLE_RANCHER_WEBHOOK_VERSION=2.0.13+up0.3.13
ENV SSL_CERT_DIR /etc/kubernetes/ssl/certs
COPY --from=rancher /var/lib/rancher-data /var/lib/rancher-data
COPY --from=rancher /usr/bin/tini /usr/bin/
COPY --from=build /app/agent /app/package/run.sh /app/package/kubectl-shell.sh /app/package/shell-setup.sh /usr/bin/
WORKDIR /var/lib/rancher
ENTRYPOINT ["run.sh"]
