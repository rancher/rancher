suite: Test Ingress
templates:
- ingress.yaml
tests:
- it: should set external options
  set:
    tls: external
  asserts:
  - equal:
      path: metadata.annotations["nginx.ingress.kubernetes.io/ssl-redirect"]
      value: "false"
  - isNull:
      path: metadata.annotations["certmanager.k8s.io/issuer"]
  - isNull:
      path: spec.tls
- it: should set default annotations with default cert-manager
  asserts:
  - equal:
      path: metadata.annotations
      value:
        cert-manager.io/issuer: RELEASE-NAME-rancher
        cert-manager.io/issuer-kind: Issuer
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
- it: should set default annotations with cert-manager < 0.11.0 using capabilities
  capabilities:
    apiVersions:
    - certmanager.k8s.io/v1alpha1
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
- it: should set default annotations with cert-manager < 0.11.0 using parameter
  set:
    certmanager.version: 0.9.0
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
- it: should disable the default nginx annotations
  set:
    ingress.includeDefaultExtraAnnotations: false
  asserts:
  - equal:
      path: metadata.annotations
      value:
        cert-manager.io/issuer: RELEASE-NAME-rancher
        cert-manager.io/issuer-kind: Issuer
- it: should over write proxy-connect-timeout with default cert-manager
  set:
    ingress:
      includeDefaultExtraAnnotations: false
      extraAnnotations:
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
  asserts:
  - equal:
      path: metadata.annotations
      value:
        cert-manager.io/issuer: RELEASE-NAME-rancher
        cert-manager.io/issuer-kind: Issuer
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
- it: should over write proxy-connect-timeout with cert-manager < 0.11.0 using capabilities
  capabilities:
    apiVersions:
    - certmanager.k8s.io/v1alpha1
  set:
    ingress:
      includeDefaultExtraAnnotations: false
      extraAnnotations:
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
- it: should over write proxy-connect-timeout with cert-manager < 0.11.0 using parameter
  set:
    certmanager.version: 0.9.0
    ingress:
      includeDefaultExtraAnnotations: false
      extraAnnotations:
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
- it: should set source secret
  set:
    hostname: test
    ingress.tls.source: secret
  asserts:
  - isNull:
      path: certmanager\.k8s\.io/issuer
  - contains:
      path: spec.tls
      content:
        hosts:
        - test
        secretName: tls-rancher-ingress
- it: should set static X-Forwarded-Host header with default cert-manager
  set:
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        cert-manager.io/issuer: RELEASE-NAME-rancher
        cert-manager.io/issuer-kind: Issuer
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
- it: should set static X-Forwarded-Host header with cert-manager < 0.11.0 using capabilities
  capabilities:
    apiVersions:
    - certmanager.k8s.io/v1alpha1
  set:
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
- it: should set static X-Forwarded-Host header with cert-manager < 0.11.0 using parameter
  set:
    certmanager.version: 0.9.0
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
- it: should be able to set multiple lines using configurationSnippet with default cert-manager
  set:
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
        more_set_input_headers "foo: bar";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        cert-manager.io/issuer: RELEASE-NAME-rancher
        cert-manager.io/issuer-kind: Issuer
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
          more_set_input_headers "foo: bar";
- it: should be able to set multiple lines using configurationSnippet with cert-manager < 0.11.0 using capabilities
  capabilities:
    apiVersions:
    - certmanager.k8s.io/v1alpha1
  set:
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
        more_set_input_headers "foo: bar";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
          more_set_input_headers "foo: bar";
- it: should be able to set multiple lines using configurationSnippet with cert-manager < 0.11.0 using parameter
  set:
    certmanager.version: 0.9.0
    hostname: host.example.com
    ingress:
      configurationSnippet: |
        more_set_input_headers "X-Forwarded-Host: {{ .Values.hostname }}";
        more_set_input_headers "foo: bar";
  asserts:
  - equal:
      path: metadata.annotations
      value:
        certmanager.k8s.io/issuer: RELEASE-NAME-rancher
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          more_set_input_headers "X-Forwarded-Host: host.example.com";
          more_set_input_headers "foo: bar";
- it: should create a http rule with path
  set:
    hostname: host.example.com
  asserts:
  - equal:
      path: spec.rules
      value:
        - host: host.example.com
          http:
            paths:
            - backend:
                service:
                  name: RELEASE-NAME-rancher
                  port:
                    number: 80
              pathType: ImplementationSpecific
              path: /
- it: should create http rule with non-default path and pathType
  set:
    hostname: host.example.com
    ingress.pathType: Prefix
    ingress.path: '/*'
  asserts:
  - equal:
      path: spec.rules
      value:
        - host: host.example.com
          http:
            paths:
            - backend:
                service:
                  name: RELEASE-NAME-rancher
                  port:
                    number: 80
              pathType: Prefix
              path: "/*"
- it: should work with service.disableHTTP
  set:
    hostname: host.example.com
    service.disableHTTP: true
    ingress.servicePort: 443
  asserts:
    - equal:
        path: spec.rules
        value:
          - host: host.example.com
            http:
              paths:
                - backend:
                    service:
                      name: RELEASE-NAME-rancher
                      port:
                        number: 443
                  pathType: ImplementationSpecific
                  path: /
    - equal:
        path: metadata.annotations
        value:
          cert-manager.io/issuer: RELEASE-NAME-rancher
          cert-manager.io/issuer-kind: Issuer
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
- it: can target servicePort 443 without disabling port 80
  set:
    hostname: host.example.com
    ingress.servicePort: 443
  asserts:
    - equal:
        path: spec.rules
        value:
          - host: host.example.com
            http:
              paths:
                - backend:
                    service:
                      name: RELEASE-NAME-rancher
                      port:
                        number: 443
                  pathType: ImplementationSpecific
                  path: /
    - equal:
        path: metadata.annotations
        value:
          cert-manager.io/issuer: RELEASE-NAME-rancher
          cert-manager.io/issuer-kind: Issuer
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
