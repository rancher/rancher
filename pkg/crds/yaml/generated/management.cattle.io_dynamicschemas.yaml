---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: dynamicschemas.management.cattle.io
spec:
  group: management.cattle.io
  names:
    kind: DynamicSchema
    listKind: DynamicSchemaList
    plural: dynamicschemas
    singular: dynamicschema
  scope: Cluster
  versions:
  - name: v3
    schema:
      openAPIV3Schema:
        description: |-
          DynamicSchema is the definition of a schema. Dynamic schemas are
          created and used internally by Rancher to generate CRDs and Norman
          API endpoints, and should not be created manually.

          Functionality for generating Rancher dynamic Norman API endpoints
          is limited. These endpoints are not backed by any Norman
          stores. Related fields will affect the definition of the Norman
          schema in Rancher but without stores these will have no useful
          effect. The schema definitions themselves will still be available
          in the Norman API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Specification of the desired behavior of the the dynamic schema. More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              collectionActions:
                additionalProperties:
                  properties:
                    input:
                      description: Input is the input for a custom Norman API action.
                      type: string
                    output:
                      description: Output is the output for a custom Norman API action.
                      type: string
                  type: object
                description: |-
                  CollectionActions is the list of custom actions for collections of
                  resources of this schema in the Norman API.

                  No action handlers can be defined for dynamic schemas, so the
                  behavior of these actions cannot be defined.
                type: object
              collectionFields:
                additionalProperties:
                  properties:
                    create:
                      description: |-
                        Create indicates that this field should be excluded when creating a
                        new object of this schema through the Norman API. If a value is
                        provided for this field in a create request, it will be filtered out
                        and ignored.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    default:
                      description: Default is the default value for the field.
                      properties:
                        boolValue:
                          description: BoolValue is the default value for a Field
                            of "bool" type.
                          type: boolean
                        intValue:
                          description: IntValue is the default value for a Field of
                            "int" type.
                          type: integer
                        stringSliceValue:
                          description: |-
                            StringSliceValue is the default value for a Field of "array[string]"
                            type.
                          items:
                            type: string
                          nullable: true
                          type: array
                        stringValue:
                          description: |-
                            StringValue is the default value for a Field of "string" or
                            "password" type.
                          type: string
                      type: object
                    description:
                      description: Description is the description of this field.
                      type: string
                    dynamicField:
                      description: |-
                        DynamicField indicates this field should be removed from a schema
                        when embedding another schema into it.
                      type: boolean
                    invalidChars:
                      description: |-
                        InvalidChars defines a value for the "pattern" attribute with the
                        disallowed characters for this field in a CRD derived from this
                        schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: string
                    max:
                      description: |-
                        Max defines the "maximum" attribute for this field in a CRD derived
                        from this schema.

                        It is also used to validate maximum value of this field in the Norman
                        API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    maxLength:
                      description: |-
                        MaxLength defines the "maxLength" attribute for this field in a CRD
                        derived from this schema.

                        It is also used to validate the length of the string representation
                        of this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    min:
                      description: |-
                        Min defines the "minimum" attribute for this field in a CRD derived
                        from this schema.

                        It is also used to validate minimum value of this field in the Norman
                        API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    minLength:
                      description: |-
                        MinLength defines the "minLength" attribute for this field in a CRD
                        derived from this schema.

                        It is also used to validate the length of the string representation
                        of this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    nullable:
                      description: |-
                        Nullable indicates that a field in a CRD derived from this schema
                        will be nullable.

                        It also indicates whether the field can take a null value in a valid
                        object of this schema in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    options:
                      description: |-
                        Options defines the "enum" attribute with valid values for this field
                        in a CRD derived from this schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      items:
                        type: string
                      type: array
                    required:
                      description: |-
                        Required indicates that a field in a CRD derived from this schema
                        will be required.

                        It also indicates that this field is required when creating a new
                        object of this schema through the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    type:
                      description: |-
                        Type is the type of the field. Possible types are "string",
                        "password", "boolean", "int", "array[string]" or another schema name.
                      type: string
                    unique:
                      description: Unique has no effect.
                      type: boolean
                    update:
                      description: |-
                        Update indicates that this field should remain unchanged when
                        updating an object of this schema through the Norman API. If a value
                        is provided for this field in an update request, it will be filtered
                        out and ignored.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be updated in the Norman API.
                      type: boolean
                    validChars:
                      description: |-
                        ValidChars defines a value for the "pattern" attribute with the
                        allowed characters for this field in a CRD derived from this schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: string
                  type: object
                description: CollectionFields has no effect.
                type: object
              collectionFilters:
                additionalProperties:
                  properties:
                    modifiers:
                      description: |-
                        Modifiers are the operators that can be used when filtering a
                        collection of resources in the Norman API.
                      items:
                        type: string
                      type: array
                  type: object
                description: |-
                  CollectionFilters are filters for listing collections of resources of
                  this schema. Each map key is a field that can be used as a filter.

                  No Norman stores are defined for dynamic schemas, so no collections
                  can be retrieved to be filtered.
                type: object
              collectionMethods:
                description: |-
                  CollectionMethods is a list of http methods available for collections
                  of resources of this schema in the Norman API.

                  No Norman stores are defined for dynamic schemas, so these methods
                  will always return an error.
                items:
                  type: string
                type: array
              dynamicSchemaVersion:
                description: |-
                  DynamicSchemaVersion is used to determine whether the Norman schema
                  should be updated when this object is updated. The schema is only
                  updated if the previous version differs. Rancher overwrites this
                  field.
                type: string
              embed:
                description: |-
                  Embed determines whether the ResourceFields of this schema should be
                  embedded into another Norman schema (EmbedType). When Embed is true,
                  updates after creation to this object don't affect its corresponding
                  Norman schema and will only change the fields of the EmbedType
                  schema.
                type: boolean
              embedType:
                description: |-
                  EmbedType identifies the Norman schema into which the ResourceFields
                  of this object should be embedded in, when Embed is true.
                type: string
              includeableLinks:
                description: IncludeableLinks has no effect.
                items:
                  type: string
                type: array
              pluralName:
                description: |-
                  PluralName is an alternate name used to reference collections of
                  resources of this schema in the Norman API.

                  No Norman stores are defined for dynamic schemas, so no collections
                  can be retrieved through this name.
                type: string
              resourceActions:
                additionalProperties:
                  properties:
                    input:
                      description: Input is the input for a custom Norman API action.
                      type: string
                    output:
                      description: Output is the output for a custom Norman API action.
                      type: string
                  type: object
                description: |-
                  ResourceActions is the list of custom actions for this resource in
                  the Norman API.

                  No API action handlers can be defined for dynamic schemas, so the
                  behavior of these actions cannot be defined.
                type: object
              resourceFields:
                additionalProperties:
                  properties:
                    create:
                      description: |-
                        Create indicates that this field should be excluded when creating a
                        new object of this schema through the Norman API. If a value is
                        provided for this field in a create request, it will be filtered out
                        and ignored.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    default:
                      description: Default is the default value for the field.
                      properties:
                        boolValue:
                          description: BoolValue is the default value for a Field
                            of "bool" type.
                          type: boolean
                        intValue:
                          description: IntValue is the default value for a Field of
                            "int" type.
                          type: integer
                        stringSliceValue:
                          description: |-
                            StringSliceValue is the default value for a Field of "array[string]"
                            type.
                          items:
                            type: string
                          nullable: true
                          type: array
                        stringValue:
                          description: |-
                            StringValue is the default value for a Field of "string" or
                            "password" type.
                          type: string
                      type: object
                    description:
                      description: Description is the description of this field.
                      type: string
                    dynamicField:
                      description: |-
                        DynamicField indicates this field should be removed from a schema
                        when embedding another schema into it.
                      type: boolean
                    invalidChars:
                      description: |-
                        InvalidChars defines a value for the "pattern" attribute with the
                        disallowed characters for this field in a CRD derived from this
                        schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: string
                    max:
                      description: |-
                        Max defines the "maximum" attribute for this field in a CRD derived
                        from this schema.

                        It is also used to validate maximum value of this field in the Norman
                        API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    maxLength:
                      description: |-
                        MaxLength defines the "maxLength" attribute for this field in a CRD
                        derived from this schema.

                        It is also used to validate the length of the string representation
                        of this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    min:
                      description: |-
                        Min defines the "minimum" attribute for this field in a CRD derived
                        from this schema.

                        It is also used to validate minimum value of this field in the Norman
                        API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    minLength:
                      description: |-
                        MinLength defines the "minLength" attribute for this field in a CRD
                        derived from this schema.

                        It is also used to validate the length of the string representation
                        of this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      format: int64
                      type: integer
                    nullable:
                      description: |-
                        Nullable indicates that a field in a CRD derived from this schema
                        will be nullable.

                        It also indicates whether the field can take a null value in a valid
                        object of this schema in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    options:
                      description: |-
                        Options defines the "enum" attribute with valid values for this field
                        in a CRD derived from this schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      items:
                        type: string
                      type: array
                    required:
                      description: |-
                        Required indicates that a field in a CRD derived from this schema
                        will be required.

                        It also indicates that this field is required when creating a new
                        object of this schema through the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: boolean
                    type:
                      description: |-
                        Type is the type of the field. Possible types are "string",
                        "password", "boolean", "int", "array[string]" or another schema name.
                      type: string
                    unique:
                      description: Unique has no effect.
                      type: boolean
                    update:
                      description: |-
                        Update indicates that this field should remain unchanged when
                        updating an object of this schema through the Norman API. If a value
                        is provided for this field in an update request, it will be filtered
                        out and ignored.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be updated in the Norman API.
                      type: boolean
                    validChars:
                      description: |-
                        ValidChars defines a value for the "pattern" attribute with the
                        allowed characters for this field in a CRD derived from this schema.

                        It is also used to validate the value of the string representation of
                        this field in the Norman API.

                        No Norman stores are defined for DynamicSchemas, so no resources of
                        this schema can be created in the Norman API.
                      type: string
                  type: object
                description: ResourceFields defines the schema fields and their types.
                type: object
              resourceMethods:
                description: |-
                  ResourceMethods is a list of http methods available for resources of
                  this Norman schema in the Norman API.

                  No Norman stores are defined for dynamic schemas, so these methods
                  will always return an error.
                items:
                  type: string
                type: array
              schemaName:
                description: |-
                  SchemaName is the id under which the schema will be registered in the
                  Norman API collection of schemas. If unset, the dynamic schema
                  resource name will be used.
                type: string
            type: object
          status:
            description: |-
              Most recent observed status of the dynamic schema. More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              fake:
                description: Fake has no effect.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
