---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: auditpolicies.auditlog.cattle.io
spec:
  group: auditlog.cattle.io
  names:
    kind: AuditPolicy
    listKind: AuditPolicyList
    plural: auditpolicies
    singular: auditpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.enabled
      name: Enabled
      type: string
    - jsonPath: .status.conditions[?(@.type == "Active")].status
      name: Active
      type: string
    - jsonPath: .status.conditions[?(@.type == "Valid")].status
      name: Valid
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              additionalRedactions:
                description: |-
                  AdditionalRedactions details additional informatino to be redacted. If there are any Filers defined in the same
                  policy, these Redactions will only be applied to logs that are Allowed by those filters. If there are no
                  Filters, the redactions will be applied to all logs.
                items:
                  properties:
                    headers:
                      items:
                        type: string
                      type: array
                    paths:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              enabled:
                type: boolean
              filters:
                description: |-
                  Filters described what logs are explicitly allowed and denied. Leave empty if all logs should be allowed. The
                  Allow action has higher precedence than Deny. So if there are multiple filters that match a log and at least one
                  Allow, the log will be allowed.
                items:
                  description: Filter provides values used to filter out audit logs.
                  properties:
                    action:
                      description: Action defines what happens
                      type: string
                    requestURI:
                      description: |-
                        RequestURI is a regular expression used to match against the url of the log request. For example, the Filter:

                        Filter {
                            Action: Allow.
                            REquestURI: "/foo/.*"
                        }

                        would allow logs sent to "/foo/some/endpoint" but not "/foo" or "/foobar".
                      type: string
                  type: object
                type: array
              verbosity:
                description: |-
                  Verbosity defines how much data to collect from each log. The end verbosity for a log is calculated as a merge
                  of each policy that Allows a log (including plicies with no Filters). For example, take the two policie specs
                  below:

                  AuditPolicySpec {
                      Enabled: True,
                      Verbosity: LogVerbosity {
                          Request: Verbosity {
                              Body: True,
                          },
                      },
                  }

                  AuditPolicySpec {
                      Enabled: True,
                      Filters: []Filters{
                          {
                              Action: "allow",
                              RequestURI: "/foo"
                          },
                      },
                      Verbosity: LogVerbosity {
                          Response: Verbosity {
                              Body: True,
                          },
                      },
                  }

                  A request to the "/foo" endpoint will log both the request and response bodies, but a request to "/bar" will
                  only log the request body.
                properties:
                  level:
                    description: |-
                      Level is carried over from the previous implementation of audit logging, and provides a shorthand for defining
                      LogVerbosities. When Level is not LevelNull, Request and Reponse are ignored.
                    type: integer
                  request:
                    properties:
                      body:
                        type: boolean
                      headers:
                        type: boolean
                    type: object
                  response:
                    properties:
                      body:
                        type: boolean
                      headers:
                        type: boolean
                    type: object
                required:
                - level
                type: object
            required:
            - enabled
            type: object
          status:
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
