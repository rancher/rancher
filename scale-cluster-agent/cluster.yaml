apiVersion: v1
kind: Namespace
metadata:
  name: cattle-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cattle-cluster-agent
  namespace: cattle-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cattle-cluster-agent
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cattle-cluster-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cattle-cluster-agent
subjects:
- kind: ServiceAccount
  name: cattle-cluster-agent
  namespace: cattle-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cattle-cluster-agent
  namespace: cattle-system
  labels:
    app: cattle-cluster-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cattle-cluster-agent
  template:
    metadata:
      labels:
        app: cattle-cluster-agent
    spec:
      serviceAccountName: cattle-cluster-agent
      containers:
      - name: agent
        image: rancher/rancher-agent:v2.8.0
        env:
        - name: CATTLE_SERVER
          value: "https://your-rancher-server.com"
        - name: CATTLE_TOKEN
          value: "your-cluster-token"
        - name: CATTLE_CA_CHECKSUM
          value: ""
        - name: CATTLE_CLUSTER
          value: "true"
        - name: CATTLE_K8S_MANAGED
          value: "true"
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        volumeMounts:
        - name: cattle-state
          mountPath: /var/lib/rancher/state
        - name: cattle-credential
          mountPath: /var/lib/rancher/cred
        - name: k8s-ssl
          mountPath: /etc/kubernetes/ssl
        - name: machine-state
          mountPath: /var/lib/rancher/state/share
        - name: cattle-token
          mountPath: /var/lib/rancher/cred
        - name: cattle-ca-additional
          mountPath: /etc/kubernetes/ssl/ca-additional.pem
          subPath: ca-additional.pem
        - name: cattle-ca-additional
          mountPath: /etc/kubernetes/ssl/ca.pem
          subPath: ca.pem
        - name: cattle-ca-additional
          mountPath: /etc/kubernetes/ssl/cert.pem
          subPath: cert.pem
        - name: cattle-ca-additional
          mountPath: /etc/kubernetes/ssl/key.pem
          subPath: key.pem
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: cattle-state
        emptyDir: {}
      - name: cattle-credential
        emptyDir: {}
      - name: k8s-ssl
        emptyDir: {}
      - name: machine-state
        emptyDir: {}
      - name: cattle-token
        secret:
          secretName: cattle-token
      - name: cattle-ca-additional
        secret:
          secretName: cattle-ca-additional
---
apiVersion: v1
kind: Secret
metadata:
  name: cattle-token
  namespace: cattle-system
type: Opaque
data:
  token: ""  # Base64 encoded cluster token
---
apiVersion: v1
kind: Secret
metadata:
  name: cattle-ca-additional
  namespace: cattle-system
type: Opaque
data:
  ca-additional.pem: ""  # Base64 encoded CA certificate
  ca.pem: ""             # Base64 encoded CA certificate
  cert.pem: ""           # Base64 encoded client certificate
  key.pem: ""            # Base64 encoded client private key
---
apiVersion: v1
kind: Service
metadata:
  name: cattle-cluster-agent
  namespace: cattle-system
  labels:
    app: cattle-cluster-agent
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: cattle-cluster-agent
  type: ClusterIP 